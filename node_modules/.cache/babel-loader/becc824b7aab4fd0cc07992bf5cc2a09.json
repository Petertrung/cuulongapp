{"remainingRequest":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\src\\components\\AddRest.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\src\\components\\AddRest.vue","mtime":1604625850805},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Peter Nguyen/Documents/cuulongtuan/cuulongapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport { CREATE_CUSTOMER } from \"../router/mutations\";\nexport default {\n  name: \"AddRest\",\n  data: function data() {\n    return {\n      buzname: null,\n      firstname: null,\n      lastname: null,\n      email: null,\n      address1: null,\n      address2: null,\n      city: null,\n      postalCode: null,\n      provinceCode: null,\n      countryCode: \"US\",\n      type: null,\n      types: [{\n        text: 'Viet'\n      }, {\n        text: 'Chinese'\n      }, {\n        text: 'Korean'\n      }, {\n        text: 'ThaiS'\n      }],\n      rules: {\n        required: function required(value) {\n          return !!value || 'Required.';\n        }\n      }\n    };\n  },\n  methods: {\n    submit: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var restCreated, userId, address;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$apollo.mutate({\n                  mutation: CREATE_CUSTOMER,\n                  variables: {\n                    input: {\n                      businessId: \"QnVzaW5lc3M6ZTVkMmE5ZTctMThlYy00OGIwLTlmOTYtNDZjNGYwNDIxZGUx\",\n                      name: this.buzname,\n                      firstName: this.firstname,\n                      lastName: this.lastname,\n                      email: this.email,\n                      address: {\n                        addressLine1: this.address1,\n                        addressLine2: this.address2,\n                        city: this.city,\n                        postalCode: this.postalCode,\n                        provinceCode: \"US-\" + this.provinceCode,\n                        countryCode: \"US\"\n                      },\n                      currency: \"USD\"\n                    }\n                  }\n                });\n\n              case 2:\n                restCreated = _context.sent;\n\n                if (restCreated.data.customerCreate.didSucceed) {\n                  userId = localStorage.userId;\n                  address = {\n                    addressLine1: this.address1,\n                    addressLine2: this.address2,\n                    city: this.city,\n                    postalCode: this.postalCode,\n                    provinceCode: this.provinceCode,\n                    countryCode: \"US\"\n                  };\n                  axios.post('/api/restaurants', {\n                    name: this.buzname,\n                    restaurant_id: restCreated.data.customerCreate.customer.id,\n                    admin: userId,\n                    status: \"1\",\n                    cuisine: this.type,\n                    address: address\n                  }).then(function (response) {\n                    _this.response = response;\n                    console.log(_this.response.data._id);\n                    setTimeout(function () {\n                      return _this.$router.push({\n                        path: \"/\"\n                      });\n                    }, 2000);\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submit() {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }\n};",{"version":3,"sources":["AddRest.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-form>\r\n    <v-container>\r\n    <h4 color=\"primary\">Info</h4>\r\n  <v-text-field\r\n    label=\"Resturant Name\"\r\n    placeholder=\"Resturant\"\r\n    outlined\r\n    v-model=\"buzname\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"First Name\"\r\n    placeholder=\"First\"\r\n    outlined\r\n    v-model=\"firstname\"\r\n    :rules=\"[rules.required]\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"Last Name\"\r\n    placeholder=\"Last\"\r\n    outlined\r\n    v-model=\"lastname\"\r\n  ></v-text-field>\r\n   <v-select\r\n          :items=\"types\"\r\n          label=\"Type\"\r\n          dense\r\n          outlined\r\n          placeholder=\"Placeholder\"\r\n          v-model=\"type\"\r\n          :rules=\"[rules.required]\"\r\n        ></v-select>\r\n  <h4 color=\"primary\">Address</h4>\r\n  <v-text-field\r\n    label=\"Address Line 1\"\r\n    placeholder=\"Address 1\"\r\n    outlined\r\n    v-model=\"address1\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"Address Line 2\"\r\n    placeholder=\"Address 2\"\r\n    outlined\r\n    v-model=\"address2\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"City\"\r\n    placeholder=\"City\"\r\n    outlined\r\n    v-model=\"city\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"State\"\r\n    placeholder=\"State\"\r\n    outlined\r\n    v-model=\"provinceCode\"\r\n    maxlength = \"2\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"Zip\"\r\n    placeholder=\"Zip\"\r\n    outlined\r\n    v-model=\"postalCode\"\r\n  ></v-text-field>\r\n    <v-btn block outlined color=\"success\" v-on:click=\"submit\">Save</v-btn>\r\n    </v-container>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { CREATE_CUSTOMER } from \"../router/mutations\";\r\n\r\nexport default {\r\n  name: \"AddRest\",\r\n  data() {\r\n    return {\r\n      buzname: null,\r\n      firstname: null,\r\n      lastname: null,\r\n      email: null,\r\n      address1: null,\r\n      address2: null,\r\n      city: null,\r\n      postalCode: null,\r\n      provinceCode: null,\r\n      countryCode: \"US\",\r\n      type: null,\r\n      types: [\r\n        { text: 'Viet'},\r\n        { text: 'Chinese'},\r\n        { text: 'Korean'},\r\n        { text: 'ThaiS'},\r\n      ],\r\n       rules: {\r\n          required: value => !!value || 'Required.',\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submit: async function() {\r\n       const restCreated = await this.$apollo.mutate({\r\n        mutation: CREATE_CUSTOMER,\r\n        variables: {\r\n          input: {\r\n            businessId:\r\n              \"QnVzaW5lc3M6ZTVkMmE5ZTctMThlYy00OGIwLTlmOTYtNDZjNGYwNDIxZGUx\",\r\n            name: this.buzname,\r\n            firstName: this.firstname,\r\n            lastName: this.lastname,\r\n            email: this.email,\r\n            address: {\r\n              addressLine1: this.address1,\r\n              addressLine2: this.address2,\r\n              city: this.city,\r\n              postalCode: this.postalCode,\r\n              provinceCode: \"US-\" + this.provinceCode,\r\n              countryCode: \"US\"\r\n            },\r\n            currency: \"USD\"\r\n          }\r\n        }\r\n      });\r\n      if(restCreated.data.customerCreate.didSucceed){\r\n        var userId = localStorage.userId;\r\n        var address = {\r\n              addressLine1: this.address1,\r\n              addressLine2: this.address2,\r\n              city: this.city,\r\n              postalCode: this.postalCode,\r\n              provinceCode: this.provinceCode,\r\n              countryCode: \"US\"\r\n            };\r\n         axios.post('/api/restaurants', {\r\n        name: this.buzname,\r\n        restaurant_id: restCreated.data.customerCreate.customer.id,\r\n        admin: userId,\r\n        status: \"1\",\r\n        cuisine:this.type,\r\n        address: address\r\n      }).then((response) => {\r\n         this.response = response;\r\n        console.log(this.response.data._id)\r\n         setTimeout(() => this.$router.push({ path: \"/\" }), 2000);\r\n          })\r\n       }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}