{"remainingRequest":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\src\\components\\AddRest.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\src\\components\\AddRest.vue","mtime":1604625850805},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\nimport { CREATE_CUSTOMER } from \"../router/mutations\";\r\n\r\nexport default {\r\n  name: \"AddRest\",\r\n  data() {\r\n    return {\r\n      buzname: null,\r\n      firstname: null,\r\n      lastname: null,\r\n      email: null,\r\n      address1: null,\r\n      address2: null,\r\n      city: null,\r\n      postalCode: null,\r\n      provinceCode: null,\r\n      countryCode: \"US\",\r\n      type: null,\r\n      types: [\r\n        { text: 'Viet'},\r\n        { text: 'Chinese'},\r\n        { text: 'Korean'},\r\n        { text: 'ThaiS'},\r\n      ],\r\n       rules: {\r\n          required: value => !!value || 'Required.',\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submit: async function() {\r\n       const restCreated = await this.$apollo.mutate({\r\n        mutation: CREATE_CUSTOMER,\r\n        variables: {\r\n          input: {\r\n            businessId:\r\n              \"QnVzaW5lc3M6ZTVkMmE5ZTctMThlYy00OGIwLTlmOTYtNDZjNGYwNDIxZGUx\",\r\n            name: this.buzname,\r\n            firstName: this.firstname,\r\n            lastName: this.lastname,\r\n            email: this.email,\r\n            address: {\r\n              addressLine1: this.address1,\r\n              addressLine2: this.address2,\r\n              city: this.city,\r\n              postalCode: this.postalCode,\r\n              provinceCode: \"US-\" + this.provinceCode,\r\n              countryCode: \"US\"\r\n            },\r\n            currency: \"USD\"\r\n          }\r\n        }\r\n      });\r\n      if(restCreated.data.customerCreate.didSucceed){\r\n        var userId = localStorage.userId;\r\n        var address = {\r\n              addressLine1: this.address1,\r\n              addressLine2: this.address2,\r\n              city: this.city,\r\n              postalCode: this.postalCode,\r\n              provinceCode: this.provinceCode,\r\n              countryCode: \"US\"\r\n            };\r\n         axios.post('/api/restaurants', {\r\n        name: this.buzname,\r\n        restaurant_id: restCreated.data.customerCreate.customer.id,\r\n        admin: userId,\r\n        status: \"1\",\r\n        cuisine:this.type,\r\n        address: address\r\n      }).then((response) => {\r\n         this.response = response;\r\n        console.log(this.response.data._id)\r\n         setTimeout(() => this.$router.push({ path: \"/\" }), 2000);\r\n          })\r\n       }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["AddRest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddRest.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-form>\r\n    <v-container>\r\n    <h4 color=\"primary\">Info</h4>\r\n  <v-text-field\r\n    label=\"Resturant Name\"\r\n    placeholder=\"Resturant\"\r\n    outlined\r\n    v-model=\"buzname\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"First Name\"\r\n    placeholder=\"First\"\r\n    outlined\r\n    v-model=\"firstname\"\r\n    :rules=\"[rules.required]\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"Last Name\"\r\n    placeholder=\"Last\"\r\n    outlined\r\n    v-model=\"lastname\"\r\n  ></v-text-field>\r\n   <v-select\r\n          :items=\"types\"\r\n          label=\"Type\"\r\n          dense\r\n          outlined\r\n          placeholder=\"Placeholder\"\r\n          v-model=\"type\"\r\n          :rules=\"[rules.required]\"\r\n        ></v-select>\r\n  <h4 color=\"primary\">Address</h4>\r\n  <v-text-field\r\n    label=\"Address Line 1\"\r\n    placeholder=\"Address 1\"\r\n    outlined\r\n    v-model=\"address1\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"Address Line 2\"\r\n    placeholder=\"Address 2\"\r\n    outlined\r\n    v-model=\"address2\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"City\"\r\n    placeholder=\"City\"\r\n    outlined\r\n    v-model=\"city\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"State\"\r\n    placeholder=\"State\"\r\n    outlined\r\n    v-model=\"provinceCode\"\r\n    maxlength = \"2\"\r\n  ></v-text-field>\r\n  <v-text-field\r\n    label=\"Zip\"\r\n    placeholder=\"Zip\"\r\n    outlined\r\n    v-model=\"postalCode\"\r\n  ></v-text-field>\r\n    <v-btn block outlined color=\"success\" v-on:click=\"submit\">Save</v-btn>\r\n    </v-container>\r\n  </v-form>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { CREATE_CUSTOMER } from \"../router/mutations\";\r\n\r\nexport default {\r\n  name: \"AddRest\",\r\n  data() {\r\n    return {\r\n      buzname: null,\r\n      firstname: null,\r\n      lastname: null,\r\n      email: null,\r\n      address1: null,\r\n      address2: null,\r\n      city: null,\r\n      postalCode: null,\r\n      provinceCode: null,\r\n      countryCode: \"US\",\r\n      type: null,\r\n      types: [\r\n        { text: 'Viet'},\r\n        { text: 'Chinese'},\r\n        { text: 'Korean'},\r\n        { text: 'ThaiS'},\r\n      ],\r\n       rules: {\r\n          required: value => !!value || 'Required.',\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submit: async function() {\r\n       const restCreated = await this.$apollo.mutate({\r\n        mutation: CREATE_CUSTOMER,\r\n        variables: {\r\n          input: {\r\n            businessId:\r\n              \"QnVzaW5lc3M6ZTVkMmE5ZTctMThlYy00OGIwLTlmOTYtNDZjNGYwNDIxZGUx\",\r\n            name: this.buzname,\r\n            firstName: this.firstname,\r\n            lastName: this.lastname,\r\n            email: this.email,\r\n            address: {\r\n              addressLine1: this.address1,\r\n              addressLine2: this.address2,\r\n              city: this.city,\r\n              postalCode: this.postalCode,\r\n              provinceCode: \"US-\" + this.provinceCode,\r\n              countryCode: \"US\"\r\n            },\r\n            currency: \"USD\"\r\n          }\r\n        }\r\n      });\r\n      if(restCreated.data.customerCreate.didSucceed){\r\n        var userId = localStorage.userId;\r\n        var address = {\r\n              addressLine1: this.address1,\r\n              addressLine2: this.address2,\r\n              city: this.city,\r\n              postalCode: this.postalCode,\r\n              provinceCode: this.provinceCode,\r\n              countryCode: \"US\"\r\n            };\r\n         axios.post('/api/restaurants', {\r\n        name: this.buzname,\r\n        restaurant_id: restCreated.data.customerCreate.customer.id,\r\n        admin: userId,\r\n        status: \"1\",\r\n        cuisine:this.type,\r\n        address: address\r\n      }).then((response) => {\r\n         this.response = response;\r\n        console.log(this.response.data._id)\r\n         setTimeout(() => this.$router.push({ path: \"/\" }), 2000);\r\n          })\r\n       }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}