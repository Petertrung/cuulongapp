{"remainingRequest":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\src\\components\\Elements.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\src\\components\\Elements.vue","mtime":1608538339589},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Peter Nguyen\\Documents\\cuulongtuan\\cuulongapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { loadStripeSdk } from './load-checkout';\nexport default {\n  props: {\n    pk: {\n      type: String,\n      required: true,\n    },\n    amount: {\n      type: Number,\n    },\n    stripeAccount: {\n      type: String,\n    },\n    apiVersion: {\n      type: String,\n    },\n    locale: {\n      type: String,\n      default: 'auto',\n    },\n    styleObject: {\n      type: Object,\n    }\n  },\n  data () {\n    return {\n      loading: false,\n      stripe: null,\n      elements: null,\n      card: null,\n    };\n  },\n  computed: {\n    style () {\n      return {\n        base: {\n          color: '#32325d',\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: 'antialiased',\n          fontSize: '16px',\n          '::placeholder': {\n            color: '#aab7c4'\n          }\n        },\n        invalid: {\n          color: '#fa755a',\n          iconColor: '#fa755a'\n        }\n      };\n    },\n    form () {\n      return document.getElementById('payment-form');\n    },\n  },\n  methods: {\n    submit () {\n      this.$refs.submitButtonRef.click();\n    },\n  },\n  mounted () {\n    loadStripeSdk(this.pk, 'v3', () => {\n      const options = {\n        stripeAccount: this.stripeAccount,\n        apiVersion: this.apiVersion,\n        locale: this.locale,\n      };\n      this.stripe = window.Stripe(this.pk, options);\n      this.elements = this.stripe.elements();\n      this.card = this.elements.create('card', { style: this.styleObject || this.style });\n      this.card.mount('#card-element');\n\n      this.card.addEventListener('change', ({ error }) => {\n        const displayError = document.getElementById('card-errors');\n        if (error) {\n          displayError.textContent = error.message;\n          return;\n        }\n        displayError.textContent = '';\n      });\n      \n      this.form.addEventListener('submit', async (event) => {\n        try {\n          this.$emit('loading', true);\n          event.preventDefault();\n          const data = {\n            ...this.card\n          };\n          if (this.amount) data.amount = this.amount;\n          const { token, error } = await this.stripe.createToken(data);\n          if (error) {\n            const errorElement = document.getElementById('card-errors');\n            errorElement.textContent = error.message;\n            console.error(error);\n            this.$emit('error 1', error);\n            return;\n          }\n          this.$emit('token', token);\n        } catch (error) {\n          console.error(error);\n          this.$emit('error', error);\n        } finally {\n          this.$emit('loading', false);\n        }\n      });\n    });\n  }\n}\n",{"version":3,"sources":["Elements.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"Elements.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <form id=\"payment-form\">\n      <slot name=\"card-element\">\n        <div id=\"card-element\"></div>\n      </slot>\n      <slot name=\"card-errors\">\n        <div id=\"card-errors\" role=\"alert\"></div>\n      </slot>\n      <button ref=\"submitButtonRef\" type=\"submit\" class=\"hide\"></button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { loadStripeSdk } from './load-checkout';\nexport default {\n  props: {\n    pk: {\n      type: String,\n      required: true,\n    },\n    amount: {\n      type: Number,\n    },\n    stripeAccount: {\n      type: String,\n    },\n    apiVersion: {\n      type: String,\n    },\n    locale: {\n      type: String,\n      default: 'auto',\n    },\n    styleObject: {\n      type: Object,\n    }\n  },\n  data () {\n    return {\n      loading: false,\n      stripe: null,\n      elements: null,\n      card: null,\n    };\n  },\n  computed: {\n    style () {\n      return {\n        base: {\n          color: '#32325d',\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: 'antialiased',\n          fontSize: '16px',\n          '::placeholder': {\n            color: '#aab7c4'\n          }\n        },\n        invalid: {\n          color: '#fa755a',\n          iconColor: '#fa755a'\n        }\n      };\n    },\n    form () {\n      return document.getElementById('payment-form');\n    },\n  },\n  methods: {\n    submit () {\n      this.$refs.submitButtonRef.click();\n    },\n  },\n  mounted () {\n    loadStripeSdk(this.pk, 'v3', () => {\n      const options = {\n        stripeAccount: this.stripeAccount,\n        apiVersion: this.apiVersion,\n        locale: this.locale,\n      };\n      this.stripe = window.Stripe(this.pk, options);\n      this.elements = this.stripe.elements();\n      this.card = this.elements.create('card', { style: this.styleObject || this.style });\n      this.card.mount('#card-element');\n\n      this.card.addEventListener('change', ({ error }) => {\n        const displayError = document.getElementById('card-errors');\n        if (error) {\n          displayError.textContent = error.message;\n          return;\n        }\n        displayError.textContent = '';\n      });\n      \n      this.form.addEventListener('submit', async (event) => {\n        try {\n          this.$emit('loading', true);\n          event.preventDefault();\n          const data = {\n            ...this.card\n          };\n          if (this.amount) data.amount = this.amount;\n          const { token, error } = await this.stripe.createToken(data);\n          if (error) {\n            const errorElement = document.getElementById('card-errors');\n            errorElement.textContent = error.message;\n            console.error(error);\n            this.$emit('error 1', error);\n            return;\n          }\n          this.$emit('token', token);\n        } catch (error) {\n          console.error(error);\n          this.$emit('error', error);\n        } finally {\n          this.$emit('loading', false);\n        }\n      });\n    });\n  }\n}\n</script>\n\n<style scoped>\n.StripeElement {\n  box-sizing: border-box;\n\n  height: 40px;\n\n  padding: 10px 12px;\n\n  border: 1px solid transparent;\n  border-radius: 4px;\n  background-color: white;\n\n  box-shadow: 0 1px 3px 0 #e6ebf1;\n  -webkit-transition: box-shadow 150ms ease;\n  transition: box-shadow 150ms ease;\n}\n\n.StripeElement--focus {\n  box-shadow: 0 1px 3px 0 #cfd7df;\n}\n\n.StripeElement--invalid {\n  border-color: #fa755a;\n}\n\n.StripeElement--webkit-autofill {\n  background-color: #fefde5 !important;\n}\n\n.hide {\n  visibility: hidden;\n}\n</style>\n"]}]}